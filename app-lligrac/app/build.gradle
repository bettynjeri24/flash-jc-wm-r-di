import java.text.SimpleDateFormat

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "kotlin-kapt"
    id 'dagger.hilt.android.plugin'
}


static def getDate(String dateFormat) {
    def df = new SimpleDateFormat(dateFormat)
    Calendar c = Calendar.getInstance()
    TimeZone tz = c.getTimeZone()
    df.setTimeZone(tz)
    return df.format(new Date())
}

static def getShortDate() {
    return getDate("yyMMdd")
}


/**
 * VERSIONS
 */
def versionMajor = 1
def versionMinor = 1
def versionPatch = 23

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file "keystore.properties"

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdk 31

    defaultConfig {
        applicationId "io.eclectics.cargilldigital"
        minSdk 22
        targetSdk 31
        versionCode versionPatch
        resConfigs "en", "US"
        versionName "${versionMajor}.${versionMinor}.${versionPatch}-" + getShortDate()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        //Assume you have storeFile generated already
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            resValue "string", "app_version", "v${defaultConfig.versionName}"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    externalNativeBuild {
        cmake {
            path 'src/CMakeLists.txt'
        }
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    //common lib
    implementation project(path: ':common')

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation files('libs/bixolon_printer_v127.jar')

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.4.2'
    implementation 'androidx.navigation:navigation-ui:2.4.2'

    implementation "androidx.multidex:multidex:2.0.1"
    //charts
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    // date picker
    implementation 'com.github.drawers:SpinnerDatePicker:2.1.0'
    //  time
    implementation 'net.danlew:android.joda:2.10.14'
    //sweet dialog
    implementation 'com.github.f0ris.sweetalert:library:1.6.2'
    //country code picker
    implementation 'com.hbb20:ccp:2.5.4'
    //ScanQRCode
    implementation 'com.github.yuriy-budiyev:code-scanner:2.1.1'
    //generate qr code
    implementation 'com.google.zxing:core:3.4.0'

    //google services
    implementation 'com.google.android.gms:play-services-auth-api-phone:17.5.1'
    implementation 'com.google.android.gms:play-services-gcm:17.0.0'
    implementation 'com.google.android.gms:play-services-auth:19.2.0'
    implementation "com.google.android.play:core:1.10.0"
    //timber
    implementation 'com.jakewharton.timber:timber:5.0.1'
    //room database
    implementation "androidx.room:room-runtime:2.4.2"
    annotationProcessor "androidx.room:room-compiler:2.4.2"
    androidTestImplementation "androidx.room:room-testing:2.4.2"
    kapt "androidx.room:room-compiler:2.4.2"
    implementation "androidx.room:room-ktx:2.4.2"

    //Retrofit lib
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0"
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.6'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:4.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.6'
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"
    //--------------------------Lottie Amazing Animations ---------------------
    implementation 'com.airbnb.android:lottie:5.0.3'

    // --------Hilt Dependency Injection------------------------------
    implementation "com.google.dagger:hilt-android:2.42"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    kapt "com.google.dagger:hilt-android-compiler:2.42"
    //
    kapt "org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.5.0"
    //
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    // ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    //Work Manage
    implementation 'androidx.work:work-runtime-ktx:2.7.1'
    implementation 'androidx.hilt:hilt-work:1.0.0'
    //MaskedEditText
    implementation 'ru.egslava:MaskedEditText:1.0.5'

    //
    implementation 'com.synnapps:carouselview:0.1.5'
}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}
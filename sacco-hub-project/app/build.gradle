plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.eclectics.rnd.dktijara"
        minSdkVersion 21
        targetSdkVersion rootProject.compileSdkVersion
        versionCode 2
        resConfigs "en", "US"
        resConfigs "en", "fr"
        versionName "0.02"
        setProperty("archivesBaseName", "TIJARA")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        /* ndk {
             abiFilters.clear()
         }*/
        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a"
            //   abiFilters "arm64-v8a", "armeabi-v7a", "x86", "armeabi-v7a"
            //,         //  abiFilters "x86", "armeabi-v7a" // includes ARM SO files only, so no x86 SO file
        }
    }
    /*splits {
        abi {
            enable false //enables the ABIs split mechanism
            reset() //reset the list of ABIs to be included to an empty string
           // include 'arm64-v8a', 'armeabi-v7a', 'x86'
            universalApk true
        }
    }*/
    bundle {
        language {
            // This is disabled so that the App Bundle does NOT split the APK for each language.
            // We're gonna use the same APK for all languages.
            enableSplit false
        }
        /* density {
             enableSplit = true
         }
         abi {
             enableSplit = false
         }*/
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path file('CMakeLists.txt')
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    buildFeatures {
        dataBinding true
    }
    dexOptions {
        preDexLibraries false
    }
//', ':scannerlib'

    dynamicFeatures = [':tijara', ':support']
}

dependencies {
//Shared Library
    api project(":common")
    //Library
    implementation project(":scannerlib")


    //test
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    // androidTestImplementation 'androidx.test:rules:' + rootProject.testVersion
    androidTestImplementation 'androidx.test.espresso:espresso-core:' + rootProject.espressoVersion

    //Java dagger
    annotationProcessor "com.google.dagger:dagger-android-processor:" + rootProject.googleDaggerVersion
    annotationProcessor "com.google.dagger:dagger-compiler:" + rootProject.googleDaggerVersion
    //Kotlin dagger
    kapt 'com.google.dagger:dagger-compiler:' + rootProject.googleDaggerVersion
    kapt 'com.google.dagger:dagger-android-processor:' + rootProject.googleDaggerVersion

    implementation 'com.github.GrenderG:Toasty:1.4.2'
}